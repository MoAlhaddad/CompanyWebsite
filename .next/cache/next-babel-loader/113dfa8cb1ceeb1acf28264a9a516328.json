{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { jsx, Button, Container, Box, Input, Text, Textarea } from \"theme-ui\";\nimport { Formik } from \"formik\";\nimport styles from \"./styles\";\nimport { useState, useRef } from \"react\";\nimport { FaPaperPlane } from \"react-icons/fa\";\nimport emailjs from \"@emailjs/browser\";\n\nvar ErrorText = function ErrorText(_ref) {\n  var children = _ref.children;\n  return jsx(Text, {\n    sx: styles.errorText\n  }, children);\n};\n\nvar ContactUs = React.forwardRef(function (props, ref) {\n  var _useState = useState(false),\n      result = _useState[0],\n      showResult = _useState[1];\n\n  var _useState2 = useState({\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    email: \"\"\n  }),\n      contactUsForm = _useState2[0],\n      setContactUsForm = _useState2[1];\n\n  var sendEmail = function sendEmail(form) {\n    emailjs.sendForm(\"service_hkwfhor\", \"template_c0cut8i\", form, \"lp3n9c12kH59C65ah\").then(function (result) {\n      setContactUsForm(form);\n      console.log(result.text);\n    }, function (error) {\n      console.log(error.text);\n    });\n    e.target.reset();\n    showResult(true);\n  };\n\n  var inputStyles = function inputStyles(error) {\n    if (error) return _objectSpread(_objectSpread({}, styles.input), styles.errorInput);\n    return styles.input;\n  };\n\n  var handleInputChange = function handleInputChange(e, setFieldValue) {\n    e.preventDefault();\n    setFieldValue(e.target.id, e.target.value);\n  };\n\n  return jsx(\"section\", {\n    ref: ref,\n    id: \"contact-us\",\n    sx: _objectSpread({\n      variant: \"section.contactUs\"\n    }, styles.container)\n  }, jsx(Container, {\n    sx: styles.containerBox\n  }, jsx(Formik, {\n    initialValues: {\n      firstName: contactUsForm.firstName,\n      lastName: contactUsForm.lastName,\n      phoneNumber: contactUsForm.phoneNumber,\n      email: contactUsForm.email\n    },\n    validate: function validate(values) {\n      debugger;\n      var errors = {};\n      if (!values.firstName) errors.firstName = \"First name is required\";\n      if (!values.lastName) errors.lastName = \"Last name is required\";\n      if (!values.email) errors.email = \"Email is required\";\n      if (!values.email.match(/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/)) errors.email = \"Provide a valid email\";\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setValues = _ref2.setValues,\n          setIsSubmitting = _ref2.setIsSubmitting;\n      debugger;\n      sendEmail(values);\n      setValues(values);\n      setIsSubmitting(false);\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        setFieldValue = _ref3.setFieldValue,\n        handleSubmit = _ref3.handleSubmit;\n    return jsx(\"form\", {\n      sx: styles.form,\n      onSubmit: handleSubmit\n    }, jsx(\"h2\", {\n      style: {\n        width: \"100%\"\n      }\n    }, \"Reach Out to Us!\"), jsx(Box, {\n      sx: styles.inputContainer50\n    }, jsx(Text, {\n      sx: styles.inputContainer50Text\n    }, \"First Name *\"), jsx(Input, {\n      sx: inputStyles(errors.firstName),\n      onChange: function onChange(e) {\n        return handleInputChange(e, setFieldValue);\n      },\n      value: values.firstName,\n      id: \"firstName\",\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"First Name\"\n    }), jsx(ErrorText, null, errors.firstName && errors.firstName)), jsx(Box, {\n      sx: styles.inputContainer50\n    }, jsx(Text, {\n      sx: styles.inputContainer50Text\n    }, \"Last Name *\"), jsx(Input, {\n      sx: inputStyles(errors.lastName),\n      onChange: function onChange(e) {\n        return handleInputChange(e, setFieldValue);\n      },\n      value: values.lastName,\n      id: \"lastName\",\n      type: \"text\",\n      name: \"lastName\",\n      placeholder: \"Last Name\"\n    }), jsx(ErrorText, null, errors.lastName && errors.lastName)), jsx(Box, {\n      sx: styles.inputContainer50\n    }, jsx(Text, {\n      sx: styles.inputContainer50Text\n    }, \"Phone Number\"), jsx(Input, {\n      sx: styles.input,\n      onChange: function onChange(e) {\n        return handleInputChange(e, setFieldValue);\n      },\n      value: values.phoneNumber,\n      id: \"phoneNumber\",\n      type: \"text\",\n      name: \"phone\",\n      placeholder: \"Phone Number\"\n    })), jsx(Box, {\n      sx: styles.inputContainer50\n    }, jsx(Text, {\n      sx: styles.inputContainer50Text\n    }, \"Email *\"), jsx(Input, {\n      sx: inputStyles(errors.email),\n      onChange: function onChange(e) {\n        return handleInputChange(e, setFieldValue);\n      },\n      value: values.email,\n      id: \"email\",\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email\"\n    }), jsx(ErrorText, null, errors.email && errors.email)), jsx(Box, {\n      sx: styles.textAreaContainer\n    }, jsx(Text, {\n      sx: styles.inputContainer50Text\n    }, \"Message\"), jsx(Textarea, {\n      sx: styles.textArea,\n      name: \"message\",\n      defaultValue: \"hello\"\n    }), jsx(\"br\", null), jsx(Button, {\n      sx: styles.submitButton,\n      className: \"btn\",\n      \"aria-label\": \"Send Message\",\n      type: \"submit\"\n    }, \"Send Message \", jsx(FaPaperPlane, null)), jsx(Box, {\n      className: \"row\"\n    }, result ? jsx(Result, null) : null)));\n  })));\n});\nexport default ContactUs;","map":null,"metadata":{},"sourceType":"module"}